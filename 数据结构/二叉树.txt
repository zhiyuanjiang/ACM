1.二叉搜索树(BST)
性质：
（1）左子树权值 < 根节点 < 右子树权值
但有时会退化成链，查找效率极低

2.在二叉搜索树上改进成平衡二叉树(AVL)
性质：
（1）是一颗BST树
（2）即某结点的左右子树的高度差不超过1，平衡因子在[-1,1]内（左子树高度-右子树高度）
对不平衡的结点可以通过旋转操作使其平衡

3.红黑树(R-B Tree)，一种特殊的二叉查找树
set,map的实现使用了红黑树
特性：
（1）每个节点不是黑色就是红色
（2）根节点是黑色
（3）每个叶子节点是黑色（这里叶子节点，是指为空的叶子节点）
（4）如果一个节点是红色的，则它的子节点必须是黑色的
（5）从一个节点到该结点的子孙结点的所有路径上包含相同数目的黑结点

二叉树的中序，前序，后序遍历？
根据中序，前序求后序？
二叉树的层次输出？
判断完全二叉树？
构建AVL树？