#include <bits/stdc++.h>

using namespace std;

typedef long long llt;

const int N = 100010;
const int M = 100010;
const int INF = 0x3ffffff;
const double pi = acos(-1.0);

int data[100][100], r[10][10], c[10][10], g[10][10];

void dfs(int x, int y, int dep)
{
    if(dep == 0){
        for(int i = 1; i <= 9; ++i){
            for(int j = 1; j <= 9; ++j) cout << data[i][j] << " ";
            cout << endl;
        }
        return;
    }
    int t = (x-1)*9+y;
    //cout << x << " " << y << endl;
    int nx,ny;
    for(int i = t+1; i <= 81; ++i){
        nx = (i-1)/9+1, ny = i-(nx-1)*9;
        if(data[nx][ny] == 0) break;
    }
    int p = (nx-1)/3*3+(ny-1)/3+1;
    for(int j = 1; j <= 9; ++j){
        if(r[nx][j] == 1 || c[ny][j] == 1 || g[p][j] == 1) continue;
        data[nx][ny] = j;
        r[nx][j] = 1;
        c[ny][j] = 1;
        g[p][j] = 1;
        dfs(nx, ny, dep-1);
        data[nx][ny] = 0;
        r[nx][j] = 0;
        c[ny][j] = 0;
        g[p][j] = 0;
    }
}

int main()
{
    int dep = 0;
    for(int i = 1; i <= 9; ++i){
        for(int j = 1; j <= 9; ++j){
            cin >> data[i][j];
            if(data[i][j] == 0) dep++;
            r[i][data[i][j]] = 1;
            c[j][data[i][j]] = 1;
            int p = (i-1)/3*3+(j-1)/3+1;
            g[p][data[i][j]] = 1;
        }
    }
    dfs(1, 0, dep);
    return 0;
}
