#include<cstdio>
#include<iostream>
#include<cmath>
#include<algorithm>
using namespace std;
typedef long long ll;

ll myrand()
{
    ll a = rand();
    a=a*rand();
    return a;
}

ll fast_mult(ll x,ll n,ll mod)    //快速乘
{
    ll ans = 0;
    while(n){
        if(n&1) ans = (ans+x)%mod;
        x = (x+x)%mod;
        n >>= 1;
    }
    return ans;
}

ll fast_mi(ll x,ll n,ll mod)       //快速幂
{
    ll ans = 1;
    while(n){
        if(n&1) ans = fast_mult(ans,x,mod);
        x = fast_mult(x,x,mod);
        n >>= 1;
    }
    return ans;
}

bool Miller_Rabin(ll n,int times)
{
    ll u,x,y,a;
    if(n<2)
        return false;
    if(n==2)
        return true;
    if(!(n&1))
        return false;

    //我们先找到的最小的a^u，再逐步扩大到a^(n-1)
    for( u=n-1 ; !(u&1) ; u>>=1 );

    //Miller-Rabin测试
    for(int i=0;i<times;i++){
        a = myrand()%(n-2)+2;
        x = fast_mi(a,u,n);

        while(u < n){
            y=fast_mi(x,2,n);
            if(y == 1 && x != 1 && x != n-1){
                return false;
            }
            else{
                x=y;
                u=u*2;
            }
        }

        if(x!=1)
            return false;
    }

    return true;
}

int main()
{
    int T;
    scanf("%d",&T);
    while(T--){
        ll n;
        scanf("%lld",&n);
        if(Miller_Rabin(n,20)){
            cout<<"Yes"<<endl;
        }else{
            cout<<"No"<<endl;
        }
    }
    return 0;
}
