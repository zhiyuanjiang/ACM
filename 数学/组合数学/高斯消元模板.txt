#include <algorithm>
#include <cstring>
#include <string>
#include <iostream>
#include <cmath>

using namespace std;

const int N = 100;
typedef double Matrix[N][N];

void gauss_elimination(Matrix A,int n)
{
    int i,j,k,r;
    //消元过程
    for( i = 0 ; i < n ; ++i ){
        //选一行r并与第i行交换
        r = i;
        for( j = i+1 ; j < n ; ++j )
            if(fabs(A[j][i]) > fabs(A[r][i])) r = j;
        if(r != i) for( j = 0 ; j <= n ; ++j ) swap(A[r][j],A[i][j]);

        //与第i+1~n行进行消元
        for( k = i+1 ; k < n ; ++k ){
            double f = A[k][i]/A[i][i];
            for( j = i ; j <= n ; ++j ) A[k][j] -= f*A[i][j];
        }
        
//        for( j = n ; j >= i ; --j )
//            for( k = i+1 ; k < n ; ++k )
//                A[k][j] -= A[k][i]/A[i][i]*A[i][j];
    }

    //回带过程
    for( i = n-1 ; i >= 0 ; --i ){
        for( j = i+1 ; j < n ; ++j )
            A[i][n] -= A[j][n]*A[i][j];
        A[i][n] /= A[i][i];
    }
}