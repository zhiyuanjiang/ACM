#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <string>
#include <stack>
#include <queue>
#include <map>

using namespace std;

typedef long long ll;
const int N = 501000;
const int M = 300100;
const int INF = 0x3fffffff;
const double eps = 1e-8;
const double PI = acos(-1.0);
const int mod = 1e9+7;
typedef pair<int,int>PA;

int arr[5];

int comb(int n,int m)
{
    if(n == m || m == 0) return 1;
    else return comb(n-1,m)+comb(n-1,m-1);
}

//利用组合数，对于一个字符串，统计他前面合法串的个数n，该串的编号就是n+1

string st;

int solve()
{
    for( int i = 1 ; i < st.length() ; ++i ){
        if( st[i] <= st[i-1] ) return 0;
    }

    int ans = 0;
    int len = st.length();
    ans = arr[len-1];

    int num,pos = 0;
    for( int i = 0 ; i < len ; ++i ){
        num = st[i]-'a'-pos;
        for( int j = 0 ; j < num ; ++j ){
            pos++;
            ans += comb(26-pos,len-i-1);
        }
        pos++;
    }

    return ans+1;
}

int main()
{
    arr[0] = 0;
    for( int i = 1 ; i <= 4 ; ++i ) arr[i] = comb(26,i);
    for( int i = 1 ; i <= 4 ; ++i ) arr[i] += arr[i-1];

    while( cin >> st ){
        cout << solve() << endl;
    }
    return 0;
}
