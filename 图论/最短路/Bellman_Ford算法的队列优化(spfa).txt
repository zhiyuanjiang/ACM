#include <cstdio>
#include <queue>

using namespace std;

const int N = 1000;
const int M = 1000;
const int INF = 0x3fffffff;

//最坏的时间复杂度未0(VE)

struct Edge{
    int node,len;
    Edge*next;
}m_edge[M*2];
Edge*head[N];
int Ecnt,dist[N],vis[N];

void init()
{
    Ecnt = 0;
    fill( head , head+N , (Edge*)0 );
}

void mkEdge( int a , int b , int c )
{
    m_edge[Ecnt].node = b;
    m_edge[Ecnt].len = c;
    m_edge[Ecnt].next = head[a];
    head[a] = m_edge+Ecnt++;
}

void spfa( int n )
{
    fill( dist , dist+N , INF );
    fill( vis , vis+N , 0 );
    queue<int>point;
    point.push(n);
    vis[n] = 1;
    dist[n] = 0;

    while( !point.empty() ){
        int s = point.front();
        point.pop();
        vis[s] = 0;
        for( Edge*p = head[s] ; p ; p = p->next ){
            int t = p->node;
            if( dist[t] > dist[s]+p->len ){
                dist[t] = dist[s]+p->len;
                if( !vis[t] ){
                    point.push(t);
                    vis[t] = 1;
                }
            }
        }
    }
}

int main()
{

    return 0;
}
